
GPIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002fc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000350  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000350  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000380  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000003bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008c6  00000000  00000000  00000424  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000061d  00000000  00000000  00000cea  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000036a  00000000  00000000  00001307  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  00001674  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000399  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000349  00000000  00000000  00001aa5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001dee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <main>
  64:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPIN_Dir>:
		case D: PORTD_REG = Value; break;
	}
}
void DIO_SetPIN_Dir(DIO_PORT PORT_ID , DIO_PIN PIN_ID , DIO_DIRECTION DIRECTION)
{
	if (PORT_ID <= D && PIN_ID <= PIN7)
  6c:	84 30       	cpi	r24, 0x04	; 4
  6e:	08 f0       	brcs	.+2      	; 0x72 <DIO_SetPIN_Dir+0x6>
  70:	72 c0       	rjmp	.+228    	; 0x156 <DIO_SetPIN_Dir+0xea>
  72:	68 30       	cpi	r22, 0x08	; 8
  74:	08 f0       	brcs	.+2      	; 0x78 <DIO_SetPIN_Dir+0xc>
  76:	6f c0       	rjmp	.+222    	; 0x156 <DIO_SetPIN_Dir+0xea>
	{
		if (Output == DIRECTION)
  78:	41 30       	cpi	r20, 0x01	; 1
  7a:	a1 f5       	brne	.+104    	; 0xe4 <DIO_SetPIN_Dir+0x78>
		{
			switch(PORT_ID)
  7c:	81 30       	cpi	r24, 0x01	; 1
  7e:	89 f0       	breq	.+34     	; 0xa2 <DIO_SetPIN_Dir+0x36>
  80:	28 f0       	brcs	.+10     	; 0x8c <DIO_SetPIN_Dir+0x20>
  82:	82 30       	cpi	r24, 0x02	; 2
  84:	c9 f0       	breq	.+50     	; 0xb8 <DIO_SetPIN_Dir+0x4c>
  86:	83 30       	cpi	r24, 0x03	; 3
  88:	11 f1       	breq	.+68     	; 0xce <DIO_SetPIN_Dir+0x62>
  8a:	08 95       	ret
			{
				case  A: SetBit(DDRA_REG , PIN_ID); break;
  8c:	2a b3       	in	r18, 0x1a	; 26
  8e:	81 e0       	ldi	r24, 0x01	; 1
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	02 c0       	rjmp	.+4      	; 0x98 <DIO_SetPIN_Dir+0x2c>
  94:	88 0f       	add	r24, r24
  96:	99 1f       	adc	r25, r25
  98:	6a 95       	dec	r22
  9a:	e2 f7       	brpl	.-8      	; 0x94 <DIO_SetPIN_Dir+0x28>
  9c:	82 2b       	or	r24, r18
  9e:	8a bb       	out	0x1a, r24	; 26
  a0:	08 95       	ret
				case  B: SetBit(DDRB_REG , PIN_ID); break;
  a2:	27 b3       	in	r18, 0x17	; 23
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	02 c0       	rjmp	.+4      	; 0xae <DIO_SetPIN_Dir+0x42>
  aa:	88 0f       	add	r24, r24
  ac:	99 1f       	adc	r25, r25
  ae:	6a 95       	dec	r22
  b0:	e2 f7       	brpl	.-8      	; 0xaa <DIO_SetPIN_Dir+0x3e>
  b2:	82 2b       	or	r24, r18
  b4:	87 bb       	out	0x17, r24	; 23
  b6:	08 95       	ret
				case  C: SetBit(DDRC_REG , PIN_ID); break;
  b8:	24 b3       	in	r18, 0x14	; 20
  ba:	81 e0       	ldi	r24, 0x01	; 1
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	02 c0       	rjmp	.+4      	; 0xc4 <DIO_SetPIN_Dir+0x58>
  c0:	88 0f       	add	r24, r24
  c2:	99 1f       	adc	r25, r25
  c4:	6a 95       	dec	r22
  c6:	e2 f7       	brpl	.-8      	; 0xc0 <DIO_SetPIN_Dir+0x54>
  c8:	82 2b       	or	r24, r18
  ca:	84 bb       	out	0x14, r24	; 20
  cc:	08 95       	ret
				case  D: SetBit(DDRD_REG , PIN_ID); break;
  ce:	21 b3       	in	r18, 0x11	; 17
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	02 c0       	rjmp	.+4      	; 0xda <DIO_SetPIN_Dir+0x6e>
  d6:	88 0f       	add	r24, r24
  d8:	99 1f       	adc	r25, r25
  da:	6a 95       	dec	r22
  dc:	e2 f7       	brpl	.-8      	; 0xd6 <DIO_SetPIN_Dir+0x6a>
  de:	82 2b       	or	r24, r18
  e0:	81 bb       	out	0x11, r24	; 17
  e2:	08 95       	ret
			}
		}
		else if (Input == DIRECTION)
  e4:	41 11       	cpse	r20, r1
  e6:	37 c0       	rjmp	.+110    	; 0x156 <DIO_SetPIN_Dir+0xea>
		{
			switch(PORT_ID)
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	91 f0       	breq	.+36     	; 0x110 <DIO_SetPIN_Dir+0xa4>
  ec:	28 f0       	brcs	.+10     	; 0xf8 <DIO_SetPIN_Dir+0x8c>
  ee:	82 30       	cpi	r24, 0x02	; 2
  f0:	d9 f0       	breq	.+54     	; 0x128 <DIO_SetPIN_Dir+0xbc>
  f2:	83 30       	cpi	r24, 0x03	; 3
  f4:	29 f1       	breq	.+74     	; 0x140 <DIO_SetPIN_Dir+0xd4>
  f6:	08 95       	ret
			{
				case  A: ClearBit(DDRA_REG , PIN_ID); break;
  f8:	2a b3       	in	r18, 0x1a	; 26
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_SetPIN_Dir+0x98>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_SetPIN_Dir+0x94>
 108:	80 95       	com	r24
 10a:	82 23       	and	r24, r18
 10c:	8a bb       	out	0x1a, r24	; 26
 10e:	08 95       	ret
				case  B: ClearBit(DDRB_REG , PIN_ID); break;
 110:	27 b3       	in	r18, 0x17	; 23
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_SetPIN_Dir+0xb0>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_SetPIN_Dir+0xac>
 120:	80 95       	com	r24
 122:	82 23       	and	r24, r18
 124:	87 bb       	out	0x17, r24	; 23
 126:	08 95       	ret
				case  C: ClearBit(DDRC_REG , PIN_ID); break;
 128:	24 b3       	in	r18, 0x14	; 20
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	02 c0       	rjmp	.+4      	; 0x134 <DIO_SetPIN_Dir+0xc8>
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	6a 95       	dec	r22
 136:	e2 f7       	brpl	.-8      	; 0x130 <DIO_SetPIN_Dir+0xc4>
 138:	80 95       	com	r24
 13a:	82 23       	and	r24, r18
 13c:	84 bb       	out	0x14, r24	; 20
 13e:	08 95       	ret
				case  D: ClearBit(DDRD_REG , PIN_ID); break;
 140:	21 b3       	in	r18, 0x11	; 17
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_SetPIN_Dir+0xe0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_SetPIN_Dir+0xdc>
 150:	80 95       	com	r24
 152:	82 23       	and	r24, r18
 154:	81 bb       	out	0x11, r24	; 17
 156:	08 95       	ret

00000158 <DIO_SetPIN_Value>:
		}
	}
}
void DIO_SetPIN_Value(DIO_PORT PORT_ID , DIO_PIN PIN_ID , DIO_Value Value)
{
	if (PORT_ID <= D && PIN_ID <= PIN7)
 158:	84 30       	cpi	r24, 0x04	; 4
 15a:	08 f0       	brcs	.+2      	; 0x15e <DIO_SetPIN_Value+0x6>
 15c:	72 c0       	rjmp	.+228    	; 0x242 <DIO_SetPIN_Value+0xea>
 15e:	68 30       	cpi	r22, 0x08	; 8
 160:	08 f0       	brcs	.+2      	; 0x164 <DIO_SetPIN_Value+0xc>
 162:	6f c0       	rjmp	.+222    	; 0x242 <DIO_SetPIN_Value+0xea>
	{
		if (High == Value)
 164:	41 30       	cpi	r20, 0x01	; 1
 166:	a1 f5       	brne	.+104    	; 0x1d0 <DIO_SetPIN_Value+0x78>
		{
			switch(PORT_ID)
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	89 f0       	breq	.+34     	; 0x18e <DIO_SetPIN_Value+0x36>
 16c:	28 f0       	brcs	.+10     	; 0x178 <DIO_SetPIN_Value+0x20>
 16e:	82 30       	cpi	r24, 0x02	; 2
 170:	c9 f0       	breq	.+50     	; 0x1a4 <DIO_SetPIN_Value+0x4c>
 172:	83 30       	cpi	r24, 0x03	; 3
 174:	11 f1       	breq	.+68     	; 0x1ba <DIO_SetPIN_Value+0x62>
 176:	08 95       	ret
			{
				case A : SetBit(PORTA_REG , PIN_ID); break;
 178:	2b b3       	in	r18, 0x1b	; 27
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_SetPIN_Value+0x2c>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_SetPIN_Value+0x28>
 188:	82 2b       	or	r24, r18
 18a:	8b bb       	out	0x1b, r24	; 27
 18c:	08 95       	ret
				case B : SetBit(PORTB_REG , PIN_ID); break;
 18e:	28 b3       	in	r18, 0x18	; 24
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_SetPIN_Value+0x42>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_SetPIN_Value+0x3e>
 19e:	82 2b       	or	r24, r18
 1a0:	88 bb       	out	0x18, r24	; 24
 1a2:	08 95       	ret
				case C : SetBit(PORTC_REG , PIN_ID); break;
 1a4:	25 b3       	in	r18, 0x15	; 21
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_SetPIN_Value+0x58>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_SetPIN_Value+0x54>
 1b4:	82 2b       	or	r24, r18
 1b6:	85 bb       	out	0x15, r24	; 21
 1b8:	08 95       	ret
				case D : SetBit(PORTD_REG , PIN_ID); break;
 1ba:	22 b3       	in	r18, 0x12	; 18
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_SetPIN_Value+0x6e>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_SetPIN_Value+0x6a>
 1ca:	82 2b       	or	r24, r18
 1cc:	82 bb       	out	0x12, r24	; 18
 1ce:	08 95       	ret
			}
		}
		else if (Low == Value)
 1d0:	41 11       	cpse	r20, r1
 1d2:	37 c0       	rjmp	.+110    	; 0x242 <DIO_SetPIN_Value+0xea>
		{
			switch(PORT_ID)
 1d4:	81 30       	cpi	r24, 0x01	; 1
 1d6:	91 f0       	breq	.+36     	; 0x1fc <DIO_SetPIN_Value+0xa4>
 1d8:	28 f0       	brcs	.+10     	; 0x1e4 <DIO_SetPIN_Value+0x8c>
 1da:	82 30       	cpi	r24, 0x02	; 2
 1dc:	d9 f0       	breq	.+54     	; 0x214 <DIO_SetPIN_Value+0xbc>
 1de:	83 30       	cpi	r24, 0x03	; 3
 1e0:	29 f1       	breq	.+74     	; 0x22c <DIO_SetPIN_Value+0xd4>
 1e2:	08 95       	ret
			{
				case A : ClearBit(PORTA_REG , PIN_ID); break;
 1e4:	2b b3       	in	r18, 0x1b	; 27
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_SetPIN_Value+0x98>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_SetPIN_Value+0x94>
 1f4:	80 95       	com	r24
 1f6:	82 23       	and	r24, r18
 1f8:	8b bb       	out	0x1b, r24	; 27
 1fa:	08 95       	ret
				case B : ClearBit(PORTB_REG , PIN_ID); break;
 1fc:	28 b3       	in	r18, 0x18	; 24
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_SetPIN_Value+0xb0>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	6a 95       	dec	r22
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_SetPIN_Value+0xac>
 20c:	80 95       	com	r24
 20e:	82 23       	and	r24, r18
 210:	88 bb       	out	0x18, r24	; 24
 212:	08 95       	ret
				case C : ClearBit(PORTC_REG , PIN_ID); break;
 214:	25 b3       	in	r18, 0x15	; 21
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_SetPIN_Value+0xc8>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_SetPIN_Value+0xc4>
 224:	80 95       	com	r24
 226:	82 23       	and	r24, r18
 228:	85 bb       	out	0x15, r24	; 21
 22a:	08 95       	ret
				case D : ClearBit(PORTD_REG , PIN_ID); break;
 22c:	22 b3       	in	r18, 0x12	; 18
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_SetPIN_Value+0xe0>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_SetPIN_Value+0xdc>
 23c:	80 95       	com	r24
 23e:	82 23       	and	r24, r18
 240:	82 bb       	out	0x12, r24	; 18
 242:	08 95       	ret

00000244 <DIO_GetPIN_Value>:

DIO_Value DIO_GetPIN_Value(DIO_PORT PORT_ID , DIO_PIN PIN_ID)
{
	
 DIO_Value PinValue=Low;
	if (PORT_ID <= D && PIN_ID <= PIN7)
 244:	84 30       	cpi	r24, 0x04	; 4
 246:	70 f5       	brcc	.+92     	; 0x2a4 <DIO_GetPIN_Value+0x60>
 248:	68 30       	cpi	r22, 0x08	; 8
 24a:	70 f5       	brcc	.+92     	; 0x2a8 <DIO_GetPIN_Value+0x64>
	{
		switch(PORT_ID)
 24c:	81 30       	cpi	r24, 0x01	; 1
 24e:	79 f0       	breq	.+30     	; 0x26e <DIO_GetPIN_Value+0x2a>
 250:	28 f0       	brcs	.+10     	; 0x25c <DIO_GetPIN_Value+0x18>
 252:	82 30       	cpi	r24, 0x02	; 2
 254:	a9 f0       	breq	.+42     	; 0x280 <DIO_GetPIN_Value+0x3c>
 256:	83 30       	cpi	r24, 0x03	; 3
 258:	e1 f0       	breq	.+56     	; 0x292 <DIO_GetPIN_Value+0x4e>
 25a:	28 c0       	rjmp	.+80     	; 0x2ac <DIO_GetPIN_Value+0x68>
		{
			case A : PinValue = GetBit(PINA_REG , PIN_ID); break;
 25c:	89 b3       	in	r24, 0x19	; 25
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_GetPIN_Value+0x22>
 262:	95 95       	asr	r25
 264:	87 95       	ror	r24
 266:	6a 95       	dec	r22
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_GetPIN_Value+0x1e>
 26a:	81 70       	andi	r24, 0x01	; 1
 26c:	08 95       	ret
			case B : PinValue = GetBit(PINB_REG , PIN_ID); break;
 26e:	86 b3       	in	r24, 0x16	; 22
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_GetPIN_Value+0x34>
 274:	95 95       	asr	r25
 276:	87 95       	ror	r24
 278:	6a 95       	dec	r22
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_GetPIN_Value+0x30>
 27c:	81 70       	andi	r24, 0x01	; 1
 27e:	08 95       	ret
			case C : PinValue = GetBit(PINC_REG , PIN_ID); break;
 280:	83 b3       	in	r24, 0x13	; 19
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	02 c0       	rjmp	.+4      	; 0x28a <DIO_GetPIN_Value+0x46>
 286:	95 95       	asr	r25
 288:	87 95       	ror	r24
 28a:	6a 95       	dec	r22
 28c:	e2 f7       	brpl	.-8      	; 0x286 <DIO_GetPIN_Value+0x42>
 28e:	81 70       	andi	r24, 0x01	; 1
 290:	08 95       	ret
			case D : PinValue = GetBit(PIND_REG , PIN_ID); break;
 292:	80 b3       	in	r24, 0x10	; 16
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_GetPIN_Value+0x58>
 298:	95 95       	asr	r25
 29a:	87 95       	ror	r24
 29c:	6a 95       	dec	r22
 29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_GetPIN_Value+0x54>
 2a0:	81 70       	andi	r24, 0x01	; 1
 2a2:	08 95       	ret
}

DIO_Value DIO_GetPIN_Value(DIO_PORT PORT_ID , DIO_PIN PIN_ID)
{
	
 DIO_Value PinValue=Low;
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	08 95       	ret
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	08 95       	ret
 2ac:	80 e0       	ldi	r24, 0x00	; 0
			case D : PinValue = GetBit(PIND_REG , PIN_ID); break;
		}
	}

	return PinValue;
 2ae:	08 95       	ret

000002b0 <Room1>:
#include <util/delay.h>


void Room1(void)
{
	DIO_SetPIN_Dir(C, PIN0 , Output);
 2b0:	41 e0       	ldi	r20, 0x01	; 1
 2b2:	60 e0       	ldi	r22, 0x00	; 0
 2b4:	82 e0       	ldi	r24, 0x02	; 2
 2b6:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPIN_Dir>
	DIO_SetPIN_Dir(D , PIN4 , Input);
 2ba:	40 e0       	ldi	r20, 0x00	; 0
 2bc:	64 e0       	ldi	r22, 0x04	; 4
 2be:	83 e0       	ldi	r24, 0x03	; 3
 2c0:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPIN_Dir>

	while(1)
	{
	
		if (DIO_GetPIN_Value(D ,PIN4) == High)
 2c4:	64 e0       	ldi	r22, 0x04	; 4
 2c6:	83 e0       	ldi	r24, 0x03	; 3
 2c8:	0e 94 22 01 	call	0x244	; 0x244 <DIO_GetPIN_Value>
 2cc:	81 30       	cpi	r24, 0x01	; 1
 2ce:	31 f4       	brne	.+12     	; 0x2dc <Room1+0x2c>
		{
			DIO_SetPIN_Value(C , PIN0 , High);
 2d0:	41 e0       	ldi	r20, 0x01	; 1
 2d2:	60 e0       	ldi	r22, 0x00	; 0
 2d4:	82 e0       	ldi	r24, 0x02	; 2
 2d6:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPIN_Value>
 2da:	f4 cf       	rjmp	.-24     	; 0x2c4 <Room1+0x14>
		}
		else if(DIO_GetPIN_Value(D ,PIN4) == Low)
 2dc:	64 e0       	ldi	r22, 0x04	; 4
 2de:	83 e0       	ldi	r24, 0x03	; 3
 2e0:	0e 94 22 01 	call	0x244	; 0x244 <DIO_GetPIN_Value>
 2e4:	81 11       	cpse	r24, r1
 2e6:	ee cf       	rjmp	.-36     	; 0x2c4 <Room1+0x14>
		{
			DIO_SetPIN_Value(C , PIN0 , Low);
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	60 e0       	ldi	r22, 0x00	; 0
 2ec:	82 e0       	ldi	r24, 0x02	; 2
 2ee:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPIN_Value>
 2f2:	e8 cf       	rjmp	.-48     	; 0x2c4 <Room1+0x14>

000002f4 <main>:
	}
}
int main(void)
{
	
	Room1();
 2f4:	0e 94 58 01 	call	0x2b0	; 0x2b0 <Room1>

000002f8 <_exit>:
 2f8:	f8 94       	cli

000002fa <__stop_program>:
 2fa:	ff cf       	rjmp	.-2      	; 0x2fa <__stop_program>
